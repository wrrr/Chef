#!/bin/bash

# =====================================
# 🧑‍🍳 CHEF CONTROL PANEL — PRO KITCHEN EDITION
# =====================================

# Helper: simple animated dots
progress_dots() {
  for i in {1..3}; do
    echo -n "."
    sleep 0.5
  done
  echo ""
}

# Helper: auto-repair node_modules if broken or missing
auto_repair() {
  echo "🔍 Checking project dependencies..."
  if [ ! -d "node_modules" ] || [ ! -f "node_modules/react/package.json" ]; then
    echo "⚙️  Missing dependencies detected. Running npm install"
    progress_dots
    npm install > /dev/null 2>&1
    if [ $? -eq 0 ]; then
      echo "✅ All dependencies installed successfully!"
    else
      echo "❌ Failed to install dependencies. Check npm logs for details."
      exit 1
    fi
  else
    echo "✅ All dependencies look good!"
  fi
}

# Helper: section separator
separator() {
  echo ""
  echo "====================================="
}

# --- Display Menu ---
clear
separator
echo "        🧑‍🍳 CHEF CONTROL PANEL       "
separator
echo ""
echo "1) 🚧 Launch Website Preview (Local)"
echo "2) 📦 Prepare Website for Launch (Build)"
echo "3) 🌍 Publish Live Website (Cloudflare)"
echo "4) 🧹 Deep Clean & Reset Project"
separator
echo ""
read -p "Enter 1, 2, 3, or 4: " choice
echo ""

# --- Main Actions ---
case "$choice" in
  1)
    echo "🚀 Launching website preview locally..."
    auto_repair
    echo "🧱 Starting development server"
    progress_dots
    npm start
    ;;
  2)
    echo "🏗️  Preparing optimized production bundle..."
    auto_repair
    echo "⚙️  Building website"
    progress_dots
    npm run build
    if [ $? -eq 0 ]; then
      echo "✅ Build completed successfully! Files are ready in /build"
    else
      echo "❌ Build failed. Check above logs for details."
    fi
    ;;
  3)
    echo "🌍 Deploying your website to Cloudflare Pages..."
    auto_repair
    echo "🧱 Building project"
    progress_dots
    npm run build
    if [ $? -eq 0 ]; then
      echo "🚀 Uploading build to Cloudflare"
      progress_dots
      npx wrangler pages deploy build --project-name chefs2table
      if [ $? -eq 0 ]; then
        echo "✅ Deployment complete! 🌐 Your site is live."
      else
        echo "❌ Deployment failed. Please check wrangler output above."
      fi
    else
      echo "❌ Build failed. Deployment cancelled."
    fi
    ;;
  4)
    echo "🧹 Performing Deep Clean & Reset..."
    echo "⚠️  This will remove node_modules and reinstall everything fresh."
    read -p "Continue? (y/N): " confirm
    if [[ "$confirm" =~ ^[Yy]$ ]]; then
      echo "🚿 Cleaning project"
      rm -rf node_modules package-lock.json
      progress_dots
      echo "📦 Reinstalling dependencies"
      npm install
      if [ $? -eq 0 ]; then
        echo "✅ Deep Clean completed successfully!"
      else
        echo "❌ Something went wrong during reinstall. Check npm logs."
      fi
    else
      echo "🛑 Clean cancelled."
    fi
    ;;
  *)
    echo "❌ Invalid selection. Please run the script again and choose 1, 2, 3, or 4."
    ;;
esac

separator
echo "💡 Tip: You can re-run this anytime with './chef'"
echo ""

