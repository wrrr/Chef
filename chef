#!/usr/bin/env bash
set -euo pipefail

# === Chefs2Table helper ===
# Dev / Build / Deploy / Ship / Backup / GitHub Sync ‚Äî now with a looping menu üí´

DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$DIR"

PROJECT_NAME="chefs2u"
DEFAULT_PORT="${PORT:-3002}"

need() { command -v "$1" >/dev/null 2>&1 || { echo "‚ùå Missing dependency: $1"; exit 1; }; }

line()  { printf '%*s\n' "70" '' | tr ' ' '‚îÄ'; }
title() { echo; line; echo " $1"; line; }

pause() { read -rp $'\n‚Ü©Ô∏è  Press ENTER to return to the menu‚Ä¶'; }

dev() {
  title "üß™ Dev: CRA on port $DEFAULT_PORT"
  need npm
  # Don't kill the whole script if you Ctrl+C the dev server
  set +e
  BROWSER=none PORT="$DEFAULT_PORT" npm start
  code=$?
  set -e
  echo
  echo "üõë Dev server stopped (exit $code)"
  pause
}

build() {
  title "üõ†Ô∏è  Build: React production bundle"
  need npm
  npm run build
  echo
  echo "‚úÖ Build done."
  pause
}

deploy() {
  title "üöÄ Deploy: Cloudflare Pages ($PROJECT_NAME)"
  need npx
  npx wrangler pages deploy ./build --project-name="$PROJECT_NAME" --commit-dirty=true
  echo
  echo "‚ú® Deployment complete."
  pause
}

ship() {
  title "üì¶ Ship: Build + Deploy"
  build
  deploy
}

backup() {
  title "üíæ Backup: node backup.js"
  need node
  if [[ -f "$DIR/backup.js" ]]; then
    node "$DIR/backup.js"
  else
    echo "‚ö†Ô∏è backup.js not found at: $DIR/backup.js"
  fi
  pause
}

github_sync() {
  title "üîÑ GitHub Sync"
  need git
  echo "üîÑ Syncing with GitHub..."
  # Clean common junk
  find . -name "*.lock" -type f -delete
  git rm -r --cached backups 2>/dev/null || true
  git rm -r --cached node_modules/.cache 2>/dev/null || true

  git add .
  if ! git diff-index --quiet HEAD; then
    git commit -m "Sync with GitHub: sanitize project structure"
    git push
    echo "‚úÖ Pushed."
  else
    echo "‚ÑπÔ∏è  No changes to commit."
  fi
  pause
}

main_menu() {
  clear
  cat <<'MENU'

Pick an option:
  1) üß™  Dev (start CRA on port 3002)
  2) üõ†Ô∏è  Build
  3) üöÄ  Deploy
  4) üì¶  Build + Deploy
  5) üíæ  Backup (node backup.js)
  6) üîÑ  GitHub Sync
  0) ‚ùå  Exit
MENU
  echo
  read -rp "Enter choice: " choice
  case "${choice:-}" in
    1) dev ;;
    2) build ;;
    3) deploy ;;
    4) ship ;;
    5) backup ;;
    6) github_sync ;;
    0) echo "üëã Bye!"; exit 0 ;;
    *) echo "‚ùå Invalid option."; pause ;;
  esac
}

# Dependency preflight (only for tools we actually use)
need bash
# npm/npx/wrangler/git/node checks happen inside each task

# Loop forever until you pick Exit
while true; do
  main_menu
done
